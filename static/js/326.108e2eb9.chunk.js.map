{"version":3,"file":"static/js/326.108e2eb9.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled(\"button\")<any>`\n  background: ${(p) => p.backgroundColor || \"#1B3888\"};\n  color: ${(p) => (p.textColor || \"#E4E4E4\")};\n  font-weight: 700;\n  border: ${(p) => p.backgroundColor || \"#1B3888\"};\n  border-radius: 30px;\n  padding: 13px 1rem;\n  cursor: pointer;\n  margin-top: 0.625rem;\n  min-width: 120px;\n  transition: all 0.3s ease-in-out;\n  font-family: Neue Haas Bold;\n  font-size: 16px;\n  \n  @media screen and (min-width: 992px) {\n    font-size: 19px;\n  }\n  &:hover,\n  &:active,\n  &:focus {\n    filter: brightness(80%);\n  }\n`;\n","import { StyledButton } from \"./styles\";\nimport { ButtonProps } from \"../types\";\nimport { Link } from \"react-router-dom\";\n\nexport const Button = ({\n  backgroundColor,\n  textColor,\n  fixedWidth,\n  children,\n  onClick,\n  linkTo,\n}: ButtonProps) => {\n  if(linkTo) return (\n    <Link to={linkTo}>\n      <StyledButton backgroundColor={backgroundColor} textColor={textColor} fixedWidth={fixedWidth} onClick={onClick}>\n        {children}\n      </StyledButton>\n    </Link>\n  )\n  return (\n    <StyledButton backgroundColor={backgroundColor} textColor={textColor} fixedWidth={fixedWidth} onClick={onClick}>\n    {children}\n    </StyledButton>\n  )\n  }\n;\n","import styled from \"styled-components\";\n\nexport const LeftContentSection = styled(\"section\")<{ backgroundColor?: string, backgroundSVG?: string}>`\n  position: relative;\n  padding: 10rem 8rem 10rem;\n  display: flex;\n  align-items: center;\n  height: 100%;\n\n  ${(props) => (props.backgroundColor && \"background-color: \" + props.backgroundColor + \";\")}\n  ${(props) => (props.backgroundSVG && \"background-image: url(/img/svg/\" + props.backgroundSVG + \"); background-size: cover;\")}\n  \n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 2rem 6rem;\n    min-height: 400px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 2rem 3rem;\n    min-height: 400px;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n  height: 100%;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  width: 100%;\n  max-width: 540px;\n  height: 100%;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row, Col } from \"antd\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { Button } from \"../../../common/Button\";\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper,\n  ButtonWrapper,\n} from \"./styles\";\n\nconst LeftContentBlock = ({\n  icon,\n  title,\n  content,\n  button,\n  secondContent,\n  id,\n  backgroundColor,\n  backgroundSVG,\n  titleSize,\n  fadeRight,\n  person,\n}: ContentBlockProps) => {\n \n  return (\n    <LeftContentSection backgroundSVG={backgroundSVG} backgroundColor={backgroundColor}>\n      <Fade className=\"w-100\" direction={fadeRight ? \"right\" : \"left\"}>\n        <Row justify={person ? \"space-around\": \"space-between\"} align=\"top\" id={id}>\n          <Col lg={{span: 11, order: 0}} md={{span: 11, order: 0}} sm={{span: 12, order: 0}} xs={{span: 24, order: 1}}>\n            {secondContent ? secondContent : <SvgIcon src={icon} width=\"100%\" height=\"100%\" />}\n          </Col>\n          <Col className={person ? \"d-flex align-items-center justify-content-center\" : \"\"} lg={{span: 11, order: 1}} md={{span: 11, order: 1}} sm={{span: 11, order: 1}} xs={{span: 24, order: 0}}>\n            <ContentWrapper>\n                <h6 style={titleSize ? {fontSize: titleSize}: {}}>{title}</h6>\n              <Content>{content}</Content>\n              <ButtonWrapper>\n                {typeof button === \"object\" &&\n                  button.map((item: any, id: number) => {\n                    return (\n                      <Button\n                        key={id}\n                        backgroundColor={item.color}\n                        fixedWidth={true}                        \n                      >\n                        {item.title}\n                      </Button>\n                    );\n                  })}\n              </ButtonWrapper>\n            </ContentWrapper>\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n  );\n};\n\nexport default LeftContentBlock;\n","import styled from \"styled-components\";\n\nexport const RightBlockContainer =  styled(\"section\")<{ backgroundColor?: string, backgroundSVG?: string}>`\n  position: relative;\n  padding: 10rem 8rem 10rem;\n  display: flex;\n  align-items: center;\n  height: 100%;\n\n  ${(props) => (props.backgroundColor && \"background-color: \" + props.backgroundColor + \";\")}\n  ${(props) => (props.backgroundSVG && \"background-image: url(/img/svg/\" + props.backgroundSVG + \"); background-size: cover;\")}\n\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 2rem 6rem;\n    min-height: 400px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 2rem 3rem;\n    min-height: 400px;\n  }\n`;\nexport const P = styled(\"p\")`\n  font-size: 16px;\n  font-family: Neue Haas Medium;\n\n  @media screen and (min-width: 992px) {\n    font-size: 25px;\n  }\n`;\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n  height: 100%;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  width: 100%;\n  max-width: 540px;\n  height: 100%;\n`;\n","import { Row, Col } from \"antd\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  RightBlockContainer,\n  Content,\n  ContentWrapper,\n} from \"./styles\";\n\nconst RightBlock = ({\n  title,\n  content,\n  icon,\n  secondContent,\n  id,\n  backgroundColor,\n  backgroundSVG,\n  fadeRight,\n  titleSize,\n  person,\n  button,\n}: ContentBlockProps) => {\n  return (\n    <RightBlockContainer backgroundSVG={backgroundSVG} backgroundColor={backgroundColor}>\n      <Fade className=\"w-100\" direction={fadeRight ? \"right\" : \"left\"}>\n        <Row justify={person ? \"space-around\": \"space-between\"} align=\"top\" id={id}>\n          <Col className={person ? \"d-flex align-items-center justify-content-center\" : \"\"} lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n                <h6 style={titleSize ? {fontSize: titleSize}: {}}>{title}</h6>\n              <Content >{content}</Content>              \n            </ContentWrapper>\n          </Col>\n          <Col lg={11} md={11} sm={12} xs={24}>\n            {secondContent ? secondContent : <SvgIcon src={icon} width=\"100%\" height=\"100%\" />}\n          </Col>\n        </Row>\n      </Fade>\n      {button}\n    </RightBlockContainer>\n  );\n};\n\nexport default RightBlock;\n","import LeftContentBlock from \"./LeftContentBlock\";\nimport RightContentBlock from \"./RightContentBlock\";\nimport { ContentBlockProps } from \"./types\";\n\nconst ContentBlock = (props: ContentBlockProps) => {\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\n  return null;\n};\n\nexport default ContentBlock;\n"],"names":["StyledButton","styled","p","backgroundColor","textColor","Button","fixedWidth","children","onClick","linkTo","to","LeftContentSection","props","backgroundSVG","Content","ContentWrapper","ButtonWrapper","icon","title","content","button","secondContent","id","titleSize","fadeRight","person","className","direction","justify","align","lg","span","order","md","sm","xs","SvgIcon","src","width","height","style","fontSize","map","item","color","RightBlockContainer","type","RightContentBlock"],"sourceRoot":""}