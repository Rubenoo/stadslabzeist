{"version":3,"file":"static/js/326.d66aa16b.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled(\"button\")<any>`\n  background: ${(p) => p.backgroundColor || \"#1B3888\"};\n  color: ${(p) => p.textColor || \"#E4E4E4\"};\n  font-weight: 700;\n  border: ${(p) => p.backgroundColor || \"#1B3888\"};\n  border-radius: 30px;\n  padding: 13px 1rem;\n  cursor: pointer;\n  margin-top: 0.625rem;\n  min-width: 120px;\n  transition: all 0.3s ease-in-out;\n  font-family: Neue Haas Bold;\n  font-size: 16px;\n\n  @media screen and (min-width: 992px) {\n    font-size: 19px;\n  }\n  &:hover,\n  &:active,\n  &:focus {\n    filter: brightness(80%);\n  }\n`;\n","import { StyledButton } from \"./styles\";\nimport { ButtonProps } from \"../types\";\nimport { Link } from \"react-router-dom\";\n\nexport const Button = ({\n  backgroundColor,\n  textColor,\n  fixedWidth,\n  children,\n  onClick,\n  linkTo,\n}: ButtonProps) => {\n  if (linkTo)\n    return (\n      <Link to={linkTo}>\n        <StyledButton\n          backgroundColor={backgroundColor}\n          textColor={textColor}\n          fixedWidth={fixedWidth}\n          onClick={onClick}\n        >\n          {children}\n        </StyledButton>\n      </Link>\n    );\n  return (\n    <StyledButton\n      backgroundColor={backgroundColor}\n      textColor={textColor}\n      fixedWidth={fixedWidth}\n      onClick={onClick}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LeftContentSection = styled(\"section\")<{\n  backgroundColor?: string;\n  backgroundSVG?: string;\n}>`\n  position: relative;\n  padding: 10rem 8rem 10rem;\n  display: flex;\n  align-items: center;\n  height: 100%;\n\n  ${(props) =>\n    props.backgroundColor && \"background-color: \" + props.backgroundColor + \";\"}\n  ${(props) =>\n    props.backgroundSVG &&\n    \"background-image: url(/img/svg/\" +\n      props.backgroundSVG +\n      \"); background-size: cover;\"}\n  \n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 2rem 6rem;\n    min-height: 400px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 2rem 3rem;\n    min-height: 400px;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n  height: 100%;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  width: 100%;\n  max-width: 540px;\n  height: 100%;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row, Col } from \"antd\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { Button } from \"../../../common/Button\";\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper,\n  ButtonWrapper,\n} from \"./styles\";\n\nconst LeftContentBlock = ({\n  icon,\n  title,\n  content,\n  button,\n  secondContent,\n  id,\n  backgroundColor,\n  backgroundSVG,\n  titleSize,\n  fadeRight,\n  person,\n}: ContentBlockProps) => {\n  return (\n    <LeftContentSection\n      backgroundSVG={backgroundSVG}\n      backgroundColor={backgroundColor}\n    >\n      <Fade className=\"w-100\" direction={fadeRight ? \"right\" : \"left\"}>\n        <Row\n          justify={person ? \"space-around\" : \"space-between\"}\n          align={person ? \"middle\" : \"top\"}\n          id={id}\n        >\n          <Col\n            lg={{ span: 11, order: 0 }}\n            md={{ span: 11, order: 0 }}\n            sm={{ span: 12, order: 0 }}\n            xs={{ span: 24, order: 1 }}\n          >\n            {secondContent ? (\n              secondContent\n            ) : (\n              <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\n            )}\n          </Col>\n          <Col\n            className={\n              person ? \"d-flex align-items-center justify-content-center\" : \"\"\n            }\n            lg={{ span: 11, order: 1 }}\n            md={{ span: 11, order: 1 }}\n            sm={{ span: 11, order: 1 }}\n            xs={{ span: 24, order: 0 }}\n          >\n            <ContentWrapper>\n              <h6 style={titleSize ? { fontSize: titleSize } : {}}>{title}</h6>\n              <Content>{content}</Content>\n              <ButtonWrapper>\n                {typeof button === \"object\" &&\n                  button.map((item: any, id: number) => {\n                    return (\n                      <Button\n                        key={id}\n                        backgroundColor={item.color}\n                        fixedWidth={true}\n                      >\n                        {item.title}\n                      </Button>\n                    );\n                  })}\n              </ButtonWrapper>\n            </ContentWrapper>\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n  );\n};\n\nexport default LeftContentBlock;\n","import styled from \"styled-components\";\n\nexport const RightBlockContainer = styled(\"section\")<{\n  backgroundColor?: string;\n  backgroundSVG?: string;\n}>`\n  position: relative;\n  padding: 10rem 8rem 10rem;\n  display: flex;\n  align-items: center;\n  height: 100%;\n\n  ${(props) =>\n    props.backgroundColor && \"background-color: \" + props.backgroundColor + \";\"}\n  ${(props) =>\n    props.backgroundSVG &&\n    \"background-image: url(/img/svg/\" +\n      props.backgroundSVG +\n      \"); background-size: cover;\"}\n\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 2rem 6rem;\n    min-height: 400px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 2rem 3rem;\n    min-height: 400px;\n  }\n`;\nexport const P = styled(\"p\")`\n  font-size: 16px;\n  font-family: Neue Haas Medium;\n\n  @media screen and (min-width: 992px) {\n    font-size: 25px;\n  }\n`;\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n  height: 100%;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  width: 100%;\n  max-width: 540px;\n  height: 100%;\n`;\n","import { Row, Col } from \"antd\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { RightBlockContainer, Content, ContentWrapper } from \"./styles\";\n\nconst RightBlock = ({\n  title,\n  content,\n  icon,\n  secondContent,\n  id,\n  backgroundColor,\n  backgroundSVG,\n  fadeRight,\n  titleSize,\n  person,\n  button,\n}: ContentBlockProps) => {\n  return (\n    <RightBlockContainer\n      backgroundSVG={backgroundSVG}\n      backgroundColor={backgroundColor}\n    >\n      <Fade className=\"w-100\" direction={fadeRight ? \"right\" : \"left\"}>\n        <Row\n          justify={person ? \"space-around\" : \"space-between\"}\n          align={person ? \"middle\" : \"top\"}\n          id={id}\n        >\n          <Col\n            className={\n              person ? \"d-flex align-items-center justify-content-center\" : \"\"\n            }\n            lg={11}\n            md={11}\n            sm={11}\n            xs={24}\n          >\n            <ContentWrapper>\n              <h6 style={titleSize ? { fontSize: titleSize } : {}}>{title}</h6>\n              <Content>{content}</Content>\n            </ContentWrapper>\n          </Col>\n          <Col lg={11} md={11} sm={12} xs={24}>\n            {secondContent ? (\n              secondContent\n            ) : (\n              <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\n            )}\n          </Col>\n        </Row>\n      </Fade>\n      {button}\n    </RightBlockContainer>\n  );\n};\n\nexport default RightBlock;\n","import LeftContentBlock from \"./LeftContentBlock\";\nimport RightContentBlock from \"./RightContentBlock\";\nimport { ContentBlockProps } from \"./types\";\n\nconst ContentBlock = (props: ContentBlockProps) => {\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\n  return null;\n};\n\nexport default ContentBlock;\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","backgroundColor","textColor","Button","_ref","fixedWidth","children","onClick","linkTo","_jsx","Link","to","LeftContentSection","props","backgroundSVG","Content","_templateObject2","ContentWrapper","_templateObject3","ButtonWrapper","_templateObject4","icon","title","content","button","secondContent","id","titleSize","fadeRight","person","Fade","className","direction","_jsxs","Row","justify","align","Col","lg","span","order","md","sm","xs","SvgIcon","src","width","height","style","fontSize","map","item","color","RightBlockContainer","type","LeftContentBlock","_objectSpread","RightContentBlock"],"sourceRoot":""}