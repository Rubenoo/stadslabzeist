{"version":3,"file":"static/js/120.e774baa6.chunk.js","mappings":"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","sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LeftContentSection = styled(\"section\")<{\n  backgroundColor?: string;\n  backgroundSVG?: string;\n}>`\n  position: relative;\n  padding: 10rem 8rem 10rem;\n  display: flex;\n  align-items: center;\n  height: 100%;\n\n  ${(props) =>\n    props.backgroundColor && \"background-color: \" + props.backgroundColor + \";\"}\n  ${(props) =>\n    props.backgroundSVG &&\n    \"background-image: url(/img/svg/\" +\n      props.backgroundSVG +\n      \"); background-size: cover;\"}\n  \n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 2rem 6rem;\n    min-height: 400px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 2rem 3rem;\n    min-height: 400px;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n  height: 100%;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  width: 100%;\n  max-width: 540px;\n  height: 100%;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row, Col } from \"antd\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { Button } from \"../../../common/Button\";\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper,\n  ButtonWrapper,\n} from \"./styles\";\n\nconst LeftContentBlock = ({\n  icon,\n  title,\n  content,\n  button,\n  secondContent,\n  id,\n  backgroundColor,\n  backgroundSVG,\n  titleSize,\n  fadeRight,\n  person,\n}: ContentBlockProps) => {\n  return (\n    <LeftContentSection\n      backgroundSVG={backgroundSVG}\n      backgroundColor={backgroundColor}\n    >\n      <Fade className=\"w-100\" direction={fadeRight ? \"right\" : \"left\"}>\n        <Row\n          justify={person ? \"space-around\" : \"space-between\"}\n          align={person ? \"middle\" : \"top\"}\n          id={id}\n        >\n          <Col\n            lg={{ span: 11, order: 0 }}\n            md={{ span: 11, order: 0 }}\n            sm={{ span: 12, order: 0 }}\n            xs={{ span: 24, order: 1 }}\n          >\n            {secondContent ? (\n              secondContent\n            ) : (\n              <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\n            )}\n          </Col>\n          <Col\n            className={\n              person ? \"d-flex align-items-center justify-content-center\" : \"\"\n            }\n            lg={{ span: 11, order: 1 }}\n            md={{ span: 11, order: 1 }}\n            sm={{ span: 11, order: 1 }}\n            xs={{ span: 24, order: 0 }}\n          >\n            <ContentWrapper>\n              <h6 style={titleSize ? { fontSize: titleSize } : {}}>{title}</h6>\n              <Content>{content}</Content>\n              <ButtonWrapper>\n                {typeof button === \"object\" &&\n                  button.map((item: any, id: number) => {\n                    return (\n                      <Button\n                        key={id}\n                        backgroundColor={item.color}\n                        fixedWidth={true}\n                      >\n                        {item.title}\n                      </Button>\n                    );\n                  })}\n              </ButtonWrapper>\n            </ContentWrapper>\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n  );\n};\n\nexport default LeftContentBlock;\n","import styled from \"styled-components\";\n\nexport const RightBlockContainer = styled(\"section\")<{\n  backgroundColor?: string;\n  backgroundSVG?: string;\n}>`\n  position: relative;\n  padding: 10rem 8rem 10rem;\n  display: flex;\n  align-items: center;\n  height: 100%;\n\n  ${(props) =>\n    props.backgroundColor && \"background-color: \" + props.backgroundColor + \";\"}\n  ${(props) =>\n    props.backgroundSVG &&\n    \"background-image: url(/img/svg/\" +\n      props.backgroundSVG +\n      \"); background-size: cover;\"}\n\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 2rem 6rem;\n    min-height: 400px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 2rem 3rem;\n    min-height: 400px;\n  }\n`;\nexport const P = styled(\"p\")`\n  font-size: 16px;\n  font-family: Neue Haas Medium;\n\n  @media screen and (min-width: 992px) {\n    font-size: 25px;\n  }\n`;\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n  height: 100%;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  width: 100%;\n  max-width: 540px;\n  height: 100%;\n`;\n","import { Row, Col } from \"antd\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { RightBlockContainer, Content, ContentWrapper } from \"./styles\";\n\nconst RightBlock = ({\n  title,\n  content,\n  icon,\n  secondContent,\n  id,\n  backgroundColor,\n  backgroundSVG,\n  fadeRight,\n  titleSize,\n  person,\n  button,\n}: ContentBlockProps) => {\n  return (\n    <RightBlockContainer\n      backgroundSVG={backgroundSVG}\n      backgroundColor={backgroundColor}\n    >\n      <Fade className=\"w-100\" direction={fadeRight ? \"right\" : \"left\"}>\n        <Row\n          justify={person ? \"space-around\" : \"space-between\"}\n          align={person ? \"middle\" : \"top\"}\n          id={id}\n        >\n          <Col\n            className={\n              person ? \"d-flex align-items-center justify-content-center\" : \"\"\n            }\n            lg={11}\n            md={11}\n            sm={11}\n            xs={24}\n          >\n            <ContentWrapper>\n              <h6 style={titleSize ? { fontSize: titleSize } : {}}>{title}</h6>\n              <Content>{content}</Content>\n            </ContentWrapper>\n          </Col>\n          <Col lg={11} md={11} sm={12} xs={24}>\n            {secondContent ? (\n              secondContent\n            ) : (\n              <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\n            )}\n          </Col>\n        </Row>\n      </Fade>\n      {button}\n    </RightBlockContainer>\n  );\n};\n\nexport default RightBlock;\n","import LeftContentBlock from \"./LeftContentBlock\";\nimport RightContentBlock from \"./RightContentBlock\";\nimport { ContentBlockProps } from \"./types\";\n\nconst ContentBlock = (props: ContentBlockProps) => {\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\n  return null;\n};\n\nexport default ContentBlock;\n"],"names":["LeftContentSection","styled","_templateObject","_taggedTemplateLiteral","props","backgroundColor","backgroundSVG","Content","_templateObject2","ContentWrapper","_templateObject3","ButtonWrapper","_templateObject4","_ref","icon","title","content","button","secondContent","id","titleSize","fadeRight","person","_jsx","children","Fade","className","direction","_jsxs","Row","justify","align","Col","lg","span","order","md","sm","xs","SvgIcon","src","width","height","style","fontSize","map","item","Button","color","fixedWidth","RightBlockContainer","type","LeftContentBlock","_objectSpread","RightContentBlock"],"sourceRoot":""}